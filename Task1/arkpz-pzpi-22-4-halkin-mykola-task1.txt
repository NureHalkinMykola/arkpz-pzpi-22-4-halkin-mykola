
МІНІСТЕРСТВО ОСВІТИ ТА НАУКИ УКРАЇНИ

ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ


Кафедра «Програмної інженерії»


ЗВІТ
з лабораторної роботи №1 
з дисципліни “Аналіз та рефакторінг коду” 
на тему “РОЗРОБКА VISION & SCOPE”




Виконав ст. гр. ПЗПІ-22-4
Галкін Микола Сергійович

Перевірив:
ст. викладач кафедри ПІ
Сокорчук Ігор Петрович






Харків 2024
Мета
Створити програмну систему для автоматизації професії офіціанту.

Хід роботи

Був створений документ VISION & SCOPE (Додаток А).

Висновки

В ході лабораторної роботи був створений VISION & SCOPE документ для проекту, який розроблює систему для прискорення праці офіціантів у ресторанах.   
Відеозвіт - https://www.youtube.com/watch?v=XLq76cDgrtY 

ДОДАТОК А
Vision and scope document (концепція та рамки проекту)

1 BUSINESS REQUIREMENTS (БІЗНЕС-ВИМОГИ)

1.1 Background (Передумови)

У наш час існують різноманітні заклади громадського харчування, від простих закусочних до елітних ресторанів. Для прискорення праці та поліпшення ефективності обслуговування клієнтів необхідно розробити програму, яка прискорює процес замовлень, очікування офіціантів, швидкої передачі замовлень до кухарів та буде передбачати можливі замовлення та завантаженість ресторану.  

1.2 Business Opportunity (Бізнес-можливості)

Мається декілька сучасних аналогів, які вирішують подібну проблему. Але вони всі відрізняються в тому, як саме вони викликають офіціантів та/або оброблюють замовлення. 
Розглянемо декілька аналогів. 
Toast: дозволяє брати замовлення використовуючи планшет. Має систему збору замовлень деяких блюд по інгредієнтам. Інтегрується з системою кухні. 
Square: дозволяє брати замовлення використовуючи планшет, інтегрується з системами відстеження запасів та продажів. 
TouchBistro: дозволяє брати замовлення використовуючи iPad, має вбудовану систему замовлень для кухні. 
Бачимо, що усі сучасні аналоги використовують планшети, як інструменти замовлень, інтегруються чи мають вбудовану систему для кухні. Але саме система виклику офіціанта не присутня у цих аналогах,  використовується саме планшети а не телефони для взяття замовлень. Аналізувати та передбачати можливу завантаженість аналоги не можуть. 

2 VISION OF THE SOLUTION (КОНЦЕПЦІЯ РІШЕННЯ)

2.1 Vision Statement (Окреслення концепції)

Призначенням системи є прискорення роботи офіціантів та генерація порад для бізнесів, а саме: зручний та швидкий виклик офіціанта, завдяки використанню IоT-пристрою, як тільки він потрібний, прискорення та автоматизація передачі замовлень до кухні, використовуючи мобільний телефон. Також в систему вбудована можливість перегляду активних замовлень у WEB. Система збирає дані про замовлення та роботу офіціантів, демонструє їх статистику, робить передбачення про наповненість ресторану у деякі майбутні дні, затребуваність страв у ці дні.

2.2 Major Features (Головна функціональність)

MF-1 система викликає офіціанта до столика з натиснутою кнопкою.
MF-2 офіціанти можуть переглянути свою статистику, сповіщення, оформляти замовлення використовуючи свій акаунт. 
MF-3 система демонструє усі активні замовлення, оброблені офіціантами.
MF-4 адміністратор має можливість змінювати інформацію та доступні страви, переглядати статистику бізнесу та згенеровані поради.
MF-5 система автоматично обирає офіціанта для оброблення замовлення, збирає дані про замовлення та працю офіціантів.
MF-6 система візуалізує існуючу статистику та генерує передбачення про завантаженість ресторану в деякі дні та популярність страв.

3 SCOPE AND LIMITATIONS  (Рамки та обмеження проекту)

3.1 Scope of Initial Release (Рамки первинного випуску)

1) Отримання та обробка запиту на сервері з інформацією про номер столику, на якому була натиснута IoT-кнопка, тип необхідного обслуговування, потім оцінку офіціанта. 
2) Автоматичне обирання активного офіціанта з бази даних при натисканні кнопки, оновлення ефективності офіціанта.
3) Збереження бази даних на сервері, яка містить інформацію про страви, офіціантів, усі замовлення.
4) Хеширування паролів на сервері. 
5) Можливість змінювання інформації у базі даних адміністратором.
6) Оброблення даних з усіх зроблених замовлень, передбачення наповненості ресторану та популярності страв у деякий майбутній проміжок часу.

3.2 Scope of Subsequent Releases (Рамки наступних випусків)

1) Мобільний застосунок з можливістю авторизації.
2) Акаунти офіціантів, які дозволяють змінювати свій статус (активний/не активний), отримувати повідомлення про які столи необхідно обслуговувати,  додавати нове активне замовлення (вибір страв через меню), дивитись свою статистику.
3) Акаунт адміністратору, який дозволяє змінювати інформацію у базі даних, переглядати статистику та зроблені поради згенеровані системою.
4) WEB застосунок, який демонструє усі активні замовлення.

4 BUSINESS CONTEXT (Бізнес-контекст)

4.3 Operating Enviroment (Робоче середовище)

Вимоги доступності, надійності, продуктивності та цілісності: 
1) Система повинна бути активна завжди.
2) Час отримання повідомлення офіціантом повинен бути майже миттєвим.
3) Якщо потрібне обслуговування системи, проводиться воно в неробочий час. 
4) Паролі акаунтів хешируються на стороні серверу та зберігаються у хешированому вигляді. 
Використані технології: 
1) Сервер буде написаний на node.js з використанням фреймворку express.
2) SQL Server буде містити базу даних.
3) WEB застосунок буде створений використовуючи html, css, js.
4) Мобільний застосунок буде зроблений на Dart.
